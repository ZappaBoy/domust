name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.[0-9]+.*
    
    
env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: full
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10


defaults:
  run:
    shell: bash

jobs:
  create-release:
    if: github.repository_owner == 'lucafulgenzi'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install Rust
        run: rustup update stable --no-self-update
      - run: cargo package
      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          title: $version
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

  upload-assets:
    name: ${{ matrix.target }}
    if: github.repository_owner == 'lucafulgenzi'
    needs:
      - create-release
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-apple-darwin
            os: macos-latest
          - target: x86_64-apple-darwin
            os: macos-latest
          # Universal macOS binary is supported as universal-apple-darwin.
          - target: universal-apple-darwin
            os: macos-latest
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install Rust
        run: rustup update stable --no-self-update
      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: (matrix.os == '' || startsWith(matrix.os, 'ubuntu')) && !contains(matrix.target, '-musl')
      - uses: taiki-e/install-action@cross
        if: contains(matrix.target, '-musl')
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: domust
          target: ${{ matrix.target }}
          tar: all
          zip: none
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
